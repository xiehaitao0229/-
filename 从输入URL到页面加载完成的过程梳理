1.首先做DNS查询，如果这一步做了DNS预解析的话，会提供速度最快的ip地址回来
2.接下来是TCP握手，应用层会下发数据给传输层，这里TCP协议会指明两端的端口号，然后下发给网络层。
网络层中的IP协议会确定IP地址，并且指示了数据传输如何跳转路由器。
然后数据包会再次被封装到数据链路层的数据帧结构中，最后就是物理层里面的传输了。
3.TCP握手结束后会进行TLS握手，然后开始正式的传输数据
4.数据在进入服务器之前，可能还会先经过负载均衡的服务器，其作用就是将请求合理的分发到多台服务器上，这时假设服务端会响应一个HTML文件
5.首先浏览器会判断状态码是什么，如果是 200 那就继续解析，
如果 400 或 500 的话就会报错，如果 300 的话会进行重定向，这里会有个重定向计数器，避免过多次的重定向，超过次数也会报错
6.浏览器开始解析文件，如果是 gzip 格式的话会先解压一下，然后通过文件的编码格式知道该如何去解码文件
7.文件解码成功后会正式开始渲染流程，先会根据HTML构建DOM树，有了CSS的话就会去构建CSSOM树。
如果遇到script标签的话，会判断是否存在async或者defer,前者会并行进行下载并执行js，
后者会先下载文件，然后等待HTML解析完成后顺序执行，如果以上都没有，就会阻塞住渲染流程直到JS执行完毕。
这里如果使用 HTTP 2.0 协议的话会极大的提高多图的下载效率。
8.初始的HTML被完全加载和解析后会触发DOMContentLoaded事件
9.接下来就是CSSOM树和DOM树构建完成后会开始生成Render树,这一步就是确定页面元素的布局、样式等等诸多方面的东西
10.在生成 Render 树的过程中，浏览器就开始调用 GPU 绘制，合成图层，将内容显示在屏幕上了